#!/usr/bin/env python
"""
Usage: mpd-mia <path/to/mpd.conf>
"""
import os
import sys

from mpd import MPDClient


PROGNAME = 'mpd-mia'
EXTENSIONS = ['.flac', '.mp3', '.m4a', '.mp4', '.ogg']
CONF_FILES = [
    '~/.mpd/mpd.conf',
    '/etc/mpd.conf'
]


def echo(msg=''):
    sys.stdout.write(msg + '\n')
    sys.stdout.flush()


def fail(msg):
    sys.stderr.write('%s: %s\n' % (PROGNAME, msg))
    sys.stderr.flush()
    sys.exit(1)


def get_config(fn=None):
    if fn:
        if not os.path.isfile(fn):
            fail('%s: No such file or directory' % fn)
        return fn

    for fn in CONF_FILES:
        fn = os.path.expanduser(fn)
        if os.path.isfile(fn):
            return fn

    fail('Could not find mpd.conf')


def get_files_from_directory(dirname):
    fns = []
    for root, _, files in os.walk(dirname):
        for f in files:
            _, ext = os.path.splitext(f)
            if ext not in EXTENSIONS:
                continue
            fns.append(os.path.join(root, f))
    return set(fns)


def get_library(dirname):
    client = MPDClient()
    client.timeout = 10
    client.idletimeout = None
    client.connect("localhost", 6600)

    fns = []
    for fn in client.listall():
        try:
            fns.append(os.path.join(dirname, fn['file']))
        except KeyError:
            continue

    client.close()
    client.disconnect()

    return set(fns)


def get_music_directory(cfg):
    try:
        with open(cfg) as fh:
            for line in fh:
                line = line.strip()
                if not line:
                    continue

                parts = line.strip().split(' ', 1)
                if parts[0] == 'music_directory':
                    music_directory = parts[1]
                    break
    except IOError as e:
        fail('Could not read %s' % conf)

    if not music_directory:
        fail('Could not find the "music_directory" setting in %s' % cfg)

    return music_directory.strip('"')


def main():
    try:
        config_file = sys.argv[1]
    except IndexError:
        config_file = None

    config_file = get_config(config_file)
    music_directory = get_music_directory(config_file)
    files = get_files_from_directory(music_directory)
    library = get_library(music_directory)
    missing = sorted(files - library)
    if missing:
        echo('\n'.join(missing))


if __name__ == '__main__':
    main()
